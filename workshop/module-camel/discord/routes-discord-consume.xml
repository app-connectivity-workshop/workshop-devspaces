<?xml version="1.0" encoding="UTF-8"?>
<!-- camel-k: language=xml -->

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://camel.apache.org/schema/spring"
        xsi:schemaLocation="
            http://camel.apache.org/schema/spring
            https://camel.apache.org/schema/spring/camel-spring.xsd">

    <route id="identification">
        <from uri="direct:identify"/>
        <setBody>
            <simple>{
                "op": 2,
                "d": {
                  "token": "{{discord.token}}",
                  "intents": 513,
                  "properties": {
                    "os": "linux",
                    "browser": "my_library",
                    "device": "my_library"
                  }
                }
              }
            </simple>
        </setBody>
        <to uri="ahc-wss://gateway.discord.gg/?v=9&amp;encoding=json&amp;clientConfig=#myconfig"/>
    </route>

    <route id="heartbeat">
        <from uri="timer:heartbeat?delay=10000&amp;period={{time:30000}}"/>
        <setBody>
            <simple>{"op": 1,"d": 251}</simple>
        </setBody>
        <to uri="ahc-wss://gateway.discord.gg/?v=9&amp;encoding=json&amp;clientConfig=#myconfig"/>
    </route>

    <route id="listener">
        <from uri="ahc-wss://gateway.discord.gg/?v=9&amp;encoding=json&amp;clientConfig=#myconfig"/>
        <log message="from DISCORD: ${body}"/>
        <choice>
            <when>
                <jsonpath>$[?(@.op == 11)]</jsonpath>
                <log message="Heartbeat ACK received."/>
            </when>
            <when>
                <jsonpath>$[?(@.op == 7)]</jsonpath>
                <log message="Reconnect requested. Server will disconnect."/>
            </when>
            <when>
                <jsonpath>$[?(@.op == 10)]</jsonpath>
                <log message="Hello received. Sending identification..."/>
                <to uri="direct:identify"/>
            </when>
            <when>
                <jsonpath>$[?(@.t == "CHANNEL_DELETE")]</jsonpath>
                <log message="Channel closure, attempting to end support session."/>

                <unmarshal>
                    <json/>
                </unmarshal>

                <to uri="direct:process-discord-event"/>
<!-- 
                <to uri="direct:cache-remove"/>

                <log message="removed cache value: ${body}"/> -->

            </when>
            <when>
                <jsonpath>$[?(@.t == "MESSAGE_CREATE" &amp;&amp; @.d.author.username != "camelbot")]</jsonpath>

                <log message="got discord message: ${body}"/>

                <unmarshal>
                    <json/>
                </unmarshal>

                <when>
                    <simple>${body.get(d).get(author).get(bot)} == "true"</simple>
                    <log message="BOT message, ignoring."/>
                    <stop/>
                </when>

                <!-- <to uri="direct:process-discord-event"/> -->


                <setProperty name="text">
                    <simple>${body.get(d).get(content)}</simple>
                </setProperty>

                <setProperty name="agent">
                    <simple>${body.get(d).get(author).get(username)}</simple>
                </setProperty>

                <setProperty name="key">
                    <simple>${body.get(d).get(channel_id)}</simple>
                </setProperty>
                <to uri="direct:cache-get"/>

                <log message="got cache value: ${body}"/>

                <choice>
                    <when>
                        <simple>${body} != null</simple>

                        <to uri="language:simple:${body.replace(text,${exchangeProperty.text} )}?transform=false"/>
                        <to uri="language:simple:${body.put(agent,${exchangeProperty.agent} )}?transform=false"/>

                        <setProperty name="source">
                            <simple>${body.get(source).get(uname)}</simple>
                        </setProperty>

                        <marshal>
                            <json/>
                        </marshal>

                        <toD uri="amqp:topic:support.${exchangeProperty.source}?connectionFactory=#myFactory"/>

<setBody>
    <simple>${exchangeProperty.agent}: ${exchangeProperty.text}</simple>
</setBody>
<toD uri="kafka:support.${env.NAMESPACE}.${exchangeProperty.key}"/>

                    </when>
                    <otherwise>
                        <log message="no cache entry, ignoring message from user: {exchangeProperty.agent}"/>
                        
<!--                         <setBody>
                            <simple>(**${exchangeProperty.agent}** (${env.NAMESPACE}) not owner, message ignored)</simple>
                        </setBody>
                        <setProperty name="discord-channel">
                            <simple>${exchangeProperty.key}</simple>
                        </setProperty>
                        <to uri="direct:discord-push-message"/> -->
                    </otherwise>
                </choice>
            </when>
        </choice>
    </route>



    <route id="process-discord-event">
        <from uri="direct:process-discord-event"/>
        <log message="processing discord event..."/>


<!--                 <setProperty name="text">
                    <simple>${body.get(d).get(content)}</simple>
                </setProperty>

                <setProperty name="agent">
                    <simple>${body.get(d).get(author).get(username)}</simple>
                </setProperty> -->

                <setProperty name="key">
                    <simple>${body.get(d).get(id)}</simple>
                </setProperty>
                <to uri="direct:cache-get"/>

                <log message="got cache value: ${body}"/>

                <choice>
                    <when>
                        <simple>${body} != null</simple>

                        <to uri="language:simple:${body.replace(text, 'your session ended, conversation is now closed.' )}?transform=false"/>
                        <to uri="language:simple:${body.put(agent,'support' )}?transform=false"/>

                        <setProperty name="source">
                            <simple>${body.get(source).get(uname)}</simple>
                        </setProperty>

                        <setProperty name="key-slack">
                            <simple>${body.get(source).get(room)}</simple>
                        </setProperty>

                        <marshal>
                            <json/>
                        </marshal>

<setProperty name="context">
    <simple>${body}</simple>
</setProperty>

                        <toD uri="amqp:topic:support.${exchangeProperty.source}?connectionFactory=#myFactory"/>


                        <to uri="direct:cache-remove"/>
                        <log message="removed Discord cache value: ${body}"/>

                        <setProperty name="kafka-client">
                            <simple>${exchangeProperty.key}</simple>
                        </setProperty>
                        <setProperty name="key">
                            <simple>${exchangeProperty.key-slack}</simple>
                        </setProperty>
                        <to uri="direct:cache-remove"/>
                        <log message="removed Slack cache value: ${body}"/>


<setBody>
    <simple>done</simple>
</setBody>
<setHeader name="context">
    <simple>${exchangeProperty.context}</simple>
</setHeader>
<toD uri="kafka:support.${env.NAMESPACE}.${exchangeProperty.kafka-client}"/>
<setBody>
    <simple>${exchangeProperty.kafka-client}</simple>
</setBody>
<toD uri="kafka:support.${env.NAMESPACE}.closed"/>


                    </when>
                    <otherwise>
                        <log message="no cache entry, ignoring message"/>
<!--                         <setBody>
                            <simple>(**${exchangeProperty.agent}** (${env.NAMESPACE}) not owner, message ignored)</simple>
                        </setBody>
                        <setProperty name="discord-channel">
                            <simple>${exchangeProperty.key}</simple>
                        </setProperty>
                        <to uri="direct:discord-push-message"/> -->
                    </otherwise>
                </choice>
           <!--  </when>
        </choice> -->

    </route>


<!-- 

    <route id="kafka-closed">
        <from uri="kafka:support.closed"/>
        <to uri="direct:process"/>
    </route>



    <route id="kafka-consumer">
        <from uri="direct:process"/>

        <setProperty name="client">
            <simple>${body}</simple>
        </setProperty>

        <log message="Initiating KAFKA processor for: ${exchangeProperty.client}"/>

        <setProperty name="continue">
            <simple>true</simple>
        </setProperty>

        <loop doWhile="true">
            <simple>${exchangeProperty.continue}</simple>


              <pollEnrich>
                <simple>kafka:support.${exchangeProperty.client}?autoOffsetReset=earliest</simple>
              </pollEnrich>



                <log message="got message: ${body}"/>

            <when>
                <simple>${body} == 'done'</simple>        
                <setProperty name="continue">
                    <simple>false</simple>
                </setProperty>
            </when>

        </loop>

        <log message="KAFKA processor done"/>

    </route>
 -->


</routes>
