<?xml version="1.0" encoding="UTF-8"?>
<!-- camel-k: language=xml -->

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://camel.apache.org/schema/spring"
        xsi:schemaLocation="
            http://camel.apache.org/schema/spring
            https://camel.apache.org/schema/spring/camel-spring.xsd">


    <route id="start">
        <from uri="timer:start?repeatCount=1"/>

        <removeHeaders pattern="*"/>
        <setHeader name="Authorization">
            <simple>Bearer {{slack.token.app}}</simple>
        </setHeader>
        <setHeader name="Content-type">
            <simple>application/x-www-form-urlencoded</simple>
        </setHeader>
        <setHeader name="CamelHttpMethod">
            <simple>POST</simple>
        </setHeader>
        <to uri="https://slack.com/api/apps.connections.open"/>
        <!-- <log message="payload: ${body}"/> -->

        <unmarshal><json/></unmarshal>

        <setBody>
            <simple>${body.get(url)}</simple>
        </setBody>

        <log message="payload: ${body}"/>

        <setProperty name="ticket">
            <simple>${body.split(=)[1].split(&amp;)[0]}</simple>
        </setProperty>
        <log message="payload: ${exchangeProperty.ticket}"/>
        <setBody>
            <simple>null</simple>
        </setBody>

        <bean ref="creator" method="startListener(${exchangeProperty.ticket})"/>
    </route>


    <route id="listener">
        <from uri="direct:listener"/>
        <log message="from SLACK: ${body}"/>
        <!-- <to uri="log:deb?showAll=true"/> -->
        <unmarshal>
            <json/>
        </unmarshal>

        <when>
            <simple>${body.get(type)} == "hello"</simple>
            <log message="got HELLO message"/>
            <stop/>
        </when>

        <wireTap uri="direct:send-ack"/>

        <when>
            <simple>${body.get(payload).get(event).get(bot_id)} != null</simple>
            <log message="BOT message: ignored"/>
            <stop/>
        </when>

        <!-- <log message="msg: ${body}"/> -->

        <to uri="direct:process-message"/>
    </route>

    <route id="send-ack">
        <from uri="direct:send-ack"/>
        <setBody>
            <simple>{"envelope_id":"${body.get(envelope_id)}"}</simple>
        </setBody>
        <to uri="direct:producer"/>
    </route>

    <route id="process-message">
        <from uri="direct:process-message"/>

        <setProperty name="user">
            <simple>${body.get(payload).get(event).get(user)}</simple>
        </setProperty>
        <setProperty name="text">
            <simple>${body.get(payload).get(event).get(text)}</simple>
        </setProperty>
        <setProperty name="channel">
            <simple>${body.get(payload).get(event).get(channel)}</simple>
        </setProperty>

        <log message="new message: ${body}"/>
        <marshal>
            <json/>
        </marshal>
        <convertBodyTo type="String"/>

        <!-- <to uri="jslt:{{transform.path:request.jslt}}?allowContextMapAll=true"/> -->
        <to uri="jslt:classpath:request.jslt?allowContextMapAll=true"/>

        <removeHeaders pattern="*"/>
        <log message="to discord: ${body}"/>
        <!-- <to uri="amqp:topic:support?connectionFactory=#myFactory"/> -->
        <toD uri="amqp:topic:{{broker.amqp.topic.clients}}${exchangeProperty.channel}?connectionFactory=#myFactory"/>
        <log message="AMQP message sent."/>
    </route>

<!--     <route id="testproduce">
        <from uri="timer:tick?repeatCount=10"/>
        <to uri="amqp:topic:support?connectionFactory=#myFactory"/>
        <log message="AMQP message sent."/>
    </route> -->

<!--     <route id="test">
        <from uri="amqp:topic:support?connectionFactory=#myFactory"/>
        <log message="got support request"/>
    </route> -->

    <route id="support-response">
        <from uri="amqp:topic:{{broker.amqp.topic.agents}}?connectionFactory=#myFactory"/>
        <log message="new message: ${body}"/>

        <unmarshal>
            <json/>
        </unmarshal>

        <setProperty name="channel">
            <simple>${body.get(source).get(room)}</simple>
        </setProperty>

        <setBody>
            <simple>${body.get(agent)}: ${body.get(text)}</simple>
        </setBody>

        <to uri="direct:support-message"/>

    </route>

    <route id="support-message">
        <from uri="direct:support-message"/>

        <removeHeaders pattern="*"/>
        <setHeader name="Authorization">
            <simple>Bearer {{slack.token.bot}}</simple>
        </setHeader>
        <setBody>
            <simple>text=${body}</simple>
        </setBody>
        <setHeader name="CamelHttpMethod">
            <simple>POST</simple>
        </setHeader>
        <setHeader name="Content-Type">
                <simple>application/x-www-form-urlencoded</simple>
        </setHeader>


        <!-- <to uri="log:response?showAll=true"/> -->

<!--         <setBody>
            <simple>https://slack.com/api/chat.postMessage?channel=${exchangeProperty.channel}</simple>
        </setBody> -->

        <toD uri="https://slack.com/api/chat.postMessage?channel=${exchangeProperty.channel}"/>
        <!-- <to uri="https://slack.com/api/chat.postMessage?channel=D03P7SH5337"/> -->
     
        <log message="got response: ${body}"/>
    </route>


</routes>
