<?xml version="1.0" encoding="UTF-8"?>
<!-- camel-k: language=xml -->

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://camel.apache.org/schema/spring"
        xsi:schemaLocation="
            http://camel.apache.org/schema/spring
            https://camel.apache.org/schema/spring/camel-spring.xsd">



    <route id="get-cache-entry">
        <from uri="direct:get-cache-entry"/>

        <setProperty name="key">
            <simple>${exchangeProperty.in.get(source).get(room)}</simple>
        </setProperty>
        <to uri="direct:cache-get"/>

        <to uri="log:deb?showHeaders=true"/>
        <!-- <to uri="infinispan-embedded:default"/> -->

        <choice>
            <when>
                <simple>${body} == null</simple>
                <log message="no CACHE entry"/>

                <to uri="direct:discord-create"/>

                <!-- prepare cache value -->
                <setProperty name="cache">
                    <simple>${exchangeProperty.in}</simple>
                </setProperty>
                <to uri="language:simple:${exchangeProperty.cache.put(target,${exchangeProperty.target} )}?transform=false"/>



                <!-- use Slack key to cache value -->
                <setProperty name="key">
                    <simple>${exchangeProperty.in.get(source).get(room)}</simple>
                </setProperty>
                <setBody>
                    <simple>${exchangeProperty.cache}</simple>
                </setBody>
<log message="key: ${exchangeProperty.key}"/>
<log message="val: ${body}"/>
                <to uri="direct:cache-put"/>

                <!-- use Discord key to cache value -->
                <setProperty name="key">
                    <simple>${exchangeProperty.cache.get(target).get(room)}</simple>
                </setProperty>
                <setBody>
                    <simple>${exchangeProperty.cache}</simple>
                </setBody>
<log message="key: ${exchangeProperty.key}"/>
<log message="val: ${body}"/>
                <to uri="direct:cache-put"/>

            </when>
            <otherwise>
                <log message="got CACHE entry"/>
                <setProperty name="cache">
                    <simple>${body}</simple>
                </setProperty>
                <log message="cache: ${body}"/>
            </otherwise>
        </choice>

    </route>

    <route id="discord-create">
        <from uri="direct:discord-create"/>
        <removeHeaders pattern="*"/>
        <setHeader name="Authorization">
            <simple>Bot {{discord.token}}</simple>
        </setHeader>
        <setHeader name="Content-Type">
            <simple>application/json</simple>
        </setHeader>
        <setProperty name="namespace">
            <simple>${env.NAMESPACE}</simple>
        </setProperty>
        <setBody>
            <simple>{
    "name": "${exchangeProperty.in.get(source).get(name)}-${exchangeProperty.namespace.replace('globex-camel-','')}", 
    "parent_id":"{{discord.guild.group}}", 
    "type": 0
}
            </simple>
        </setBody>
        <to uri="https://discordapp.com/api/guilds/{{discord.guild.id}}/channels?connectionClose=true"/>
        <log message="response: ${body}"/>
        <to uri="log:discord-response?showAll=true"/>
        <convertBodyTo type="String"/>

        <to uri="jslt:classpath:cachetarget.jslt"/>

        <unmarshal>
            <json/>
        </unmarshal>

        <setProperty name="target">
            <simple>${body}</simple>
        </setProperty>
    </route>


</routes>
